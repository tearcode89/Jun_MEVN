import isIterable from "../Strict/isIterable.js";
import entriesL from "../Lazy/entriesL.js";
import mapEntriesL from "../Lazy/mapEntriesL.js";

var baseCallEach = function baseCallEach(map, object) {
  return function (fs) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return isIterable(fs) ? map(function (f) {
      return f.apply(void 0, args);
    }, fs) : object(mapEntriesL(function (f) {
      return f.apply(void 0, args);
    }, entriesL(fs)));
  };
};

export default baseCallEach;