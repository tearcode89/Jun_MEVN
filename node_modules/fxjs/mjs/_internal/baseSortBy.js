import _toConsumableArray from "@babel/runtime-corejs3/helpers/toConsumableArray";
import _sortInstanceProperty from "@babel/runtime-corejs3/core-js-stable/instance/sort";
import pipe from "../Strict/pipe.js";
import isArray from "../Strict/isArray.js";

var arrComparator = function arrComparator(arr) {
  return function (a, b) {
    var i = -1;

    while (++i < arr.length) {
      var ai = a[arr[i]],
          bi = b[arr[i]];
      if (ai === bi) continue;
      return ai < bi ? -1 : 1;
    }

    return 0;
  };
};

export default function baseSortBy(left, right, f, arr) {
  var _context, _context2;

  return isArray(f) ? baseSortBy(left, right, arrComparator(f), arr) : typeof f == "string" ? baseSortBy(left, right, function (a) {
    return a[f];
  }, arr) : f.length == 2 ? _sortInstanceProperty(_context = _toConsumableArray(arr)).call(_context, right == -1 ? pipe(f, function (n) {
    return n * -1;
  }) : f) : _sortInstanceProperty(_context2 = _toConsumableArray(arr)).call(_context2, function (a, b) {
    var fa = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : f(a);
    var fb = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : f(b);
    return fa == fb ? 0 : fa < fb ? left : right;
  });
}