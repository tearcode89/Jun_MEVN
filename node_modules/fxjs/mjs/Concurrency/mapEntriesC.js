import _asyncToGenerator from "@babel/runtime-corejs3/helpers/asyncToGenerator";
import _regeneratorRuntime from "@babel/runtime-corejs3/regenerator";
import mapEntriesL from "../Lazy/mapEntriesL.js";
import takeAllC from "./takeAllC.js";
import curry from "../Strict/curry.js";
export default curry( /*#__PURE__*/function () {
  var _mapEntriesC = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(f, iter) {
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            return _context.abrupt("return", takeAllC(mapEntriesL(f, iter)));

          case 1:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  function mapEntriesC(_x, _x2) {
    return _mapEntriesC.apply(this, arguments);
  }

  return mapEntriesC;
}());