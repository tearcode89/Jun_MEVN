import _keysInstanceProperty from "@babel/runtime-corejs3/core-js-stable/instance/keys";
import _regeneratorRuntime from "@babel/runtime-corejs3/regenerator";

var _marked = /*#__PURE__*/_regeneratorRuntime.mark(entriesL);

export default function entriesL(obj) {
  var k;
  return _regeneratorRuntime.wrap(function entriesL$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.t0 = _keysInstanceProperty(_regeneratorRuntime).call(_regeneratorRuntime, obj);

        case 1:
          if ((_context.t1 = _context.t0()).done) {
            _context.next = 7;
            break;
          }

          k = _context.t1.value;
          _context.next = 5;
          return [k, obj[k]];

        case 5:
          _context.next = 1;
          break;

        case 7:
        case "end":
          return _context.stop();
      }
    }
  }, _marked);
}