import _slicedToArray from "@babel/runtime-corejs3/helpers/slicedToArray";
import baseExtend from "../_internal/baseExtend.js";
import has from "./has.js";

var setter = function setter(obj, _ref) {
  var _ref2 = _slicedToArray(_ref, 2),
      k = _ref2[0],
      v = _ref2[1];

  return has(k, obj) || (obj[k] = v, obj), obj;
};

export default function defaults(obj) {
  for (var _len = arguments.length, objs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    objs[_key - 1] = arguments[_key];
  }

  return baseExtend(setter, obj, objs);
}