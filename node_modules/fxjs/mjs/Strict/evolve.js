import _slicedToArray from "@babel/runtime-corejs3/helpers/slicedToArray";
import go from "./go.js";
import entries from "./entries.js";
import object from "./object.js";
import curry from "./curry.js";
import identity from "./identity.js";
import map from "./map.js";
import isObject from "./isObject.js";
export default curry(function evolve(dict, obj) {
  return go(obj, entries, map(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
        k = _ref2[0],
        v = _ref2[1];

    return go(v, function (v) {
      return isObject(v) ? evolve(dict[k] || {}, v) : (dict[k] || identity)(v);
    }, function (v) {
      return [k, v];
    });
  }), object);
});