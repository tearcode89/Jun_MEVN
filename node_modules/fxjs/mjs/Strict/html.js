import _concatInstanceProperty from "@babel/runtime-corejs3/core-js-stable/instance/concat";
import _trimInstanceProperty from "@babel/runtime-corejs3/core-js-stable/instance/trim";
import reduce from "./reduce.js";
import go1 from "./go1.js";
import mapL from "../Lazy/mapL.js";
export default function html(strs) {
  for (var _len = arguments.length, datas = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    datas[_key - 1] = arguments[_key];
  }

  datas = mapL(function (d) {
    return d === undefined ? "" : d;
  }, datas);
  return go1(reduce(function (res, str) {
    return go1(datas.next().value, function (data) {
      var _context, _context2;

      return _concatInstanceProperty(_context = _concatInstanceProperty(_context2 = "".concat(res)).call(_context2, data)).call(_context, str);
    });
  }, strs), function (a) {
    return _trimInstanceProperty(a).call(a);
  });
}