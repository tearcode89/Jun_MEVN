import _slicedToArray from "@babel/runtime-corejs3/helpers/slicedToArray";
import _typeof from "@babel/runtime-corejs3/helpers/typeof";
import _includesInstanceProperty from "@babel/runtime-corejs3/core-js-stable/instance/includes";
import curry from "./curry.js";
import isArray from "./isArray.js";
import every from "./every.js";
import entriesL from "../Lazy/entriesL.js";
export default curry(function isMatch(a, b) {
  return typeof a == "function" ? !!a(b) : isArray(a) && isArray(b) ? every(function (v) {
    return _includesInstanceProperty(b).call(b, v);
  }, a) : b && _typeof(b) == "object" ? every(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
        k = _ref2[0],
        v = _ref2[1];

    return b[k] == v;
  }, entriesL(a)) : a instanceof RegExp ? b.match(a) : a == b;
});