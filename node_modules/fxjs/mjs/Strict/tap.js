import _concatInstanceProperty from "@babel/runtime-corejs3/core-js-stable/instance/concat";
import reduce from "./reduce.js";
import _go1 from "../_internal/go1Sync.js";
import go1 from "./go1.js";
export default function tap(f) {
  for (var _len = arguments.length, fs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    fs[_key - 1] = arguments[_key];
  }

  return function (a) {
    var _context;

    for (var _len2 = arguments.length, as = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      as[_key2 - 1] = arguments[_key2];
    }

    return go1(reduce(_go1, f.apply(void 0, _concatInstanceProperty(_context = [a]).call(_context, as)), fs), function (_) {
      return a;
    });
  };
}