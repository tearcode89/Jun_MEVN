import _Promise from "@babel/runtime-corejs3/core-js-stable/promise";
import toIter from "./toIter.js";
import go1 from "./go1.js";
import nop from "./nop.js";
import curry from "./curry.js";
export default curry(function takeUntil(f, iter) {
  var res = [];
  iter = toIter(iter);
  return function recur() {
    var cur;

    while (!(cur = iter.next()).done) {
      var a = cur.value;
      var b = go1(a, function (a) {
        return res.push(a), f(a, res);
      });
      if (b instanceof _Promise) return b.then(function (b) {
        return b ? res : recur();
      }).catch(function (e) {
        return e == nop ? recur() : _Promise.reject(e);
      });
      if (b) break;
    }

    return res;
  }();
});