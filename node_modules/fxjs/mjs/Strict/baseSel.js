import _typeof from "@babel/runtime-corejs3/helpers/typeof";
import curry from "./curry.js";
import isArray from "./isArray.js";
import reduce from "./reduce.js";
import findWhere from "./findWhere.js";
export default (function (sep) {
  return curry(function sel(selector, acc) {
    return !selector ? acc : isArray(selector) ? reduce(function (acc, selector) {
      return sel(selector, acc);
    }, acc, selector) : _typeof(selector) == "object" || typeof selector == "function" ? findWhere(selector, acc) : reduce(function (acc, key) {
      var s = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : key[0];
      return !acc ? undefined : s == "#" ? findWhere({
        id: key.substr(1)
      }, acc) : s == "[" || s == "{" ? findWhere(JSON.parse(key), acc) : acc[key];
    }, acc, selector.split(sep));
  });
});