import _concatInstanceProperty from "@babel/runtime-corejs3/core-js-stable/instance/concat";
import curry from "./curry.js";
export default curry(function curryN(n, f) {
  return function _recur(a) {
    var _context;

    for (var _len = arguments.length, _ = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      _[_key - 1] = arguments[_key];
    }

    return _.length >= n ? f.apply(void 0, _concatInstanceProperty(_context = [a]).call(_context, _)) : function () {
      var _context2;

      for (var _len2 = arguments.length, __ = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        __[_key2] = arguments[_key2];
      }

      return _recur.apply(void 0, _concatInstanceProperty(_context2 = [a]).call(_context2, _, __));
    };
  };
});