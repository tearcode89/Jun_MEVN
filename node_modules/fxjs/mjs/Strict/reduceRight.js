import _concatInstanceProperty from "@babel/runtime-corejs3/core-js-stable/instance/concat";
import head from "./head.js";
import reduce from "./reduce.js";
import reverseL from "../Lazy/reverseL.js";
export default function reduceRight(f, acc, iter) {
  if (arguments.length == 1) return function () {
    var _context;

    for (var _len = arguments.length, _ = new Array(_len), _key = 0; _key < _len; _key++) {
      _[_key] = arguments[_key];
    }

    return reduce.apply(void 0, _concatInstanceProperty(_context = [f]).call(_context, _));
  };
  if (arguments.length == 2) return reduce(f, head(iter = reverseL(acc)), iter);
  return reduce(f, acc, reverseL(iter));
}