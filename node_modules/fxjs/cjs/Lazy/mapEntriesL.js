"use strict";

var _sliceInstanceProperty = require("@babel/runtime-corejs3/core-js-stable/instance/slice");

var _Array$from = require("@babel/runtime-corejs3/core-js-stable/array/from");

var _Symbol = require("@babel/runtime-corejs3/core-js-stable/symbol");

var _getIteratorMethod = require("@babel/runtime-corejs3/core-js/get-iterator-method");

var _Array$isArray = require("@babel/runtime-corejs3/core-js-stable/array/is-array");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime-corejs3/regenerator"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/slicedToArray"));

var _curry = _interopRequireDefault(require("../Strict/curry.js"));

var _go = _interopRequireDefault(require("../Strict/go1.js"));

var _toIter = _interopRequireDefault(require("../Strict/toIter.js"));

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof _Symbol !== "undefined" && _getIteratorMethod(o) || o["@@iterator"]; if (!it) { if (_Array$isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { var _context3; if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = _sliceInstanceProperty(_context3 = Object.prototype.toString.call(o)).call(_context3, 8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return _Array$from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var _default = (0, _curry.default)( /*#__PURE__*/_regenerator.default.mark(function mapEntriesL(f, iter) {
  var _iterator, _step, _loop;

  return _regenerator.default.wrap(function mapEntriesL$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          _iterator = _createForOfIteratorHelper((0, _toIter.default)(iter));
          _context2.prev = 1;
          _loop = /*#__PURE__*/_regenerator.default.mark(function _loop() {
            var _step$value, k, a;

            return _regenerator.default.wrap(function _loop$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    _step$value = (0, _slicedToArray2.default)(_step.value, 2), k = _step$value[0], a = _step$value[1];
                    _context.next = 3;
                    return (0, _go.default)((0, _go.default)(a, f), function (b) {
                      return [k, b];
                    });

                  case 3:
                  case "end":
                    return _context.stop();
                }
              }
            }, _loop);
          });

          _iterator.s();

        case 4:
          if ((_step = _iterator.n()).done) {
            _context2.next = 8;
            break;
          }

          return _context2.delegateYield(_loop(), "t0", 6);

        case 6:
          _context2.next = 4;
          break;

        case 8:
          _context2.next = 13;
          break;

        case 10:
          _context2.prev = 10;
          _context2.t1 = _context2["catch"](1);

          _iterator.e(_context2.t1);

        case 13:
          _context2.prev = 13;

          _iterator.f();

          return _context2.finish(13);

        case 16:
        case "end":
          return _context2.stop();
      }
    }
  }, mapEntriesL, null, [[1, 10, 13, 16]]);
}));

exports.default = _default;