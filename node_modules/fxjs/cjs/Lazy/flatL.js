"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = flatL;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/defineProperty"));

var _getIterator2 = _interopRequireDefault(require("@babel/runtime-corejs3/core-js/get-iterator"));

var _promise = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/promise"));

var _iterator = _interopRequireDefault(require("@babel/runtime-corejs3/core-js-stable/symbol/iterator"));

var _isIterable = _interopRequireDefault(require("../Strict/isIterable.js"));

var _last = _interopRequireDefault(require("../Strict/last.js"));

var _toIter = _interopRequireDefault(require("../Strict/toIter.js"));

var _nop = _interopRequireDefault(require("../Strict/nop.js"));

function flatL(iter) {
  var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
  var concurCheck = null;
  var iterStack = [(0, _toIter.default)(iter)];
  return (0, _defineProperty2.default)({
    next: function recur() {
      var iter = (0, _last.default)(iterStack);
      if (!iter) return {
        done: true
      };
      var cur = iter.next();

      if (cur.done) {
        iterStack.pop();
        return recur();
      } else if (iterStack.length <= depth && (0, _isIterable.default)(cur.value) && typeof cur.value != "string") {
        iterStack.push((0, _getIterator2.default)(cur.value));
        return recur();
      } else if (cur.value instanceof _promise.default) {
        if (concurCheck && !concurCheck.done) {
          iterStack.length = 0;
          return {
            value: _promise.default.reject(new Error("'L.flat' can not be used with 'C' function.")),
            done: false
          };
        }

        concurCheck = concurCheck || {};
        return {
          value: cur.value.then(function (value) {
            if (!concurCheck.hasOwnProperty("done")) concurCheck.done = true;
            if (iterStack.length > depth || !(0, _isIterable.default)(value) || typeof value == "string") return value;
            var iter = (0, _getIterator2.default)(value),
                cur = iter.next();
            return cur.done ? _promise.default.reject(_nop.default) : (iterStack.push(iter), cur.value);
          }).catch(function (e) {
            if (!concurCheck.hasOwnProperty("done")) concurCheck.done = true;
            return _promise.default.reject(e);
          }),
          done: false
        };
      } else {
        return cur;
      }
    }
  }, _iterator.default, function () {
    return this;
  });
}