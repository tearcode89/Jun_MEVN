"use strict";

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js-stable/object/define-property");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.default = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime-corejs3/helpers/toConsumableArray"));

var _go = _interopRequireDefault(require("./go.js"));

var _values = _interopRequireDefault(require("./values.js"));

var _find = _interopRequireDefault(require("./find.js"));

var _pipe = _interopRequireDefault(require("./pipe.js"));

var _isMatch = _interopRequireDefault(require("./isMatch.js"));

function baseMatch(targets) {
  var cbs = [];

  function evl() {
    return (0, _go.default)(targets, _values.default, function (targets) {
      return (0, _go.default)(cbs, (0, _find.default)(function (pb) {
        return pb._case.apply(pb, (0, _toConsumableArray2.default)(targets));
      }), function (pb) {
        return pb._body.apply(pb, (0, _toConsumableArray2.default)(targets));
      });
    });
  }

  function _case(f) {
    cbs.push({
      _case: typeof f == "function" ? _pipe.default.apply(void 0, arguments) : (0, _isMatch.default)(f)
    });
    return _body;
  }

  _case.case = _case;

  function _body() {
    cbs[cbs.length - 1]._body = _pipe.default.apply(void 0, arguments);
    return _case;
  }

  _case.else = function () {
    _case(function (_) {
      return true;
    }).apply(void 0, arguments);

    return targets ? evl() : function () {
      for (var _len = arguments.length, targets2 = new Array(_len), _key = 0; _key < _len; _key++) {
        targets2[_key] = arguments[_key];
      }

      return targets = targets2, evl();
    };
  };

  return _case;
}

function match() {
  for (var _len2 = arguments.length, _ = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    _[_key2] = arguments[_key2];
  }

  return baseMatch(_);
}

match.case = function () {
  var _baseMatch;

  return (_baseMatch = baseMatch(null)).case.apply(_baseMatch, arguments);
};

var _default = match;
exports.default = _default;